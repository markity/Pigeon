// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.2
// source: service/im-chat-evloop.proto

package imchatevloop

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "pigeon/kitex_gen/service/base"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeGroupResponse_SubscribeGroupCode int32

const (
	SubscribeGroupResponse_OK              SubscribeGroupResponse_SubscribeGroupCode = 0
	SubscribeGroupResponse_VERSION_OLD     SubscribeGroupResponse_SubscribeGroupCode = 1 // 这个错误, version有效调用方可以等待version更新后重试
	SubscribeGroupResponse_NO_PERMISSION   SubscribeGroupResponse_SubscribeGroupCode = 2 // 这个错误, 没有权限, relation_id是有效的
	SubscribeGroupResponse_GROUP_DISBANDED SubscribeGroupResponse_SubscribeGroupCode = 3 // 这个错误, 群组解散, relation_id和max_seq_id是有效的
)

// Enum value maps for SubscribeGroupResponse_SubscribeGroupCode.
var (
	SubscribeGroupResponse_SubscribeGroupCode_name = map[int32]string{
		0: "OK",
		1: "VERSION_OLD",
		2: "NO_PERMISSION",
		3: "GROUP_DISBANDED",
	}
	SubscribeGroupResponse_SubscribeGroupCode_value = map[string]int32{
		"OK":              0,
		"VERSION_OLD":     1,
		"NO_PERMISSION":   2,
		"GROUP_DISBANDED": 3,
	}
)

func (x SubscribeGroupResponse_SubscribeGroupCode) Enum() *SubscribeGroupResponse_SubscribeGroupCode {
	p := new(SubscribeGroupResponse_SubscribeGroupCode)
	*p = x
	return p
}

func (x SubscribeGroupResponse_SubscribeGroupCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeGroupResponse_SubscribeGroupCode) Descriptor() protoreflect.EnumDescriptor {
	return file_service_im_chat_evloop_proto_enumTypes[0].Descriptor()
}

func (SubscribeGroupResponse_SubscribeGroupCode) Type() protoreflect.EnumType {
	return &file_service_im_chat_evloop_proto_enumTypes[0]
}

func (x SubscribeGroupResponse_SubscribeGroupCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeGroupResponse_SubscribeGroupCode.Descriptor instead.
func (SubscribeGroupResponse_SubscribeGroupCode) EnumDescriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{5, 0}
}

type SendMessageResponse_SendMessageCode int32

const (
	SendMessageResponse_OK              SendMessageResponse_SendMessageCode = 0
	SendMessageResponse_VERSION_OLD     SendMessageResponse_SendMessageCode = 1 // 这个错误, version有效调用方可以等待version更新后重试
	SendMessageResponse_NO_PERMISSION   SendMessageResponse_SendMessageCode = 2 // 这个错误, 没有权限, relation_id是有效的
	SendMessageResponse_GROUP_DISBANDED SendMessageResponse_SendMessageCode = 3 // 这个错误, 群组解散, relation_id和max_seq_id是有效的
)

// Enum value maps for SendMessageResponse_SendMessageCode.
var (
	SendMessageResponse_SendMessageCode_name = map[int32]string{
		0: "OK",
		1: "VERSION_OLD",
		2: "NO_PERMISSION",
		3: "GROUP_DISBANDED",
	}
	SendMessageResponse_SendMessageCode_value = map[string]int32{
		"OK":              0,
		"VERSION_OLD":     1,
		"NO_PERMISSION":   2,
		"GROUP_DISBANDED": 3,
	}
)

func (x SendMessageResponse_SendMessageCode) Enum() *SendMessageResponse_SendMessageCode {
	p := new(SendMessageResponse_SendMessageCode)
	*p = x
	return p
}

func (x SendMessageResponse_SendMessageCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendMessageResponse_SendMessageCode) Descriptor() protoreflect.EnumDescriptor {
	return file_service_im_chat_evloop_proto_enumTypes[1].Descriptor()
}

func (SendMessageResponse_SendMessageCode) Type() protoreflect.EnumType {
	return &file_service_im_chat_evloop_proto_enumTypes[1]
}

func (x SendMessageResponse_SendMessageCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendMessageResponse_SendMessageCode.Descriptor instead.
func (SendMessageResponse_SendMessageCode) EnumDescriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{7, 0}
}

// 创建群组, 由im-relation调用
type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      int64  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GroupId      string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupOwnerId string `protobuf:"bytes,3,opt,name=group_owner_id,json=groupOwnerId,proto3" json:"group_owner_id,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupOwnerId() string {
	if x != nil {
		return x.GroupOwnerId
	}
	return ""
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateGroupResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 更改群组成员, 由im-relation调用
type AlterGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    int64  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GroupId    int64  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	IsAdd      bool   `protobuf:"varint,3,opt,name=is_add,json=isAdd,proto3" json:"is_add,omitempty"`
	MemberId   string `protobuf:"bytes,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	RelationId int64  `protobuf:"varint,5,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
}

func (x *AlterGroupMemberRequest) Reset() {
	*x = AlterGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterGroupMemberRequest) ProtoMessage() {}

func (x *AlterGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*AlterGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{2}
}

func (x *AlterGroupMemberRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AlterGroupMemberRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AlterGroupMemberRequest) GetIsAdd() bool {
	if x != nil {
		return x.IsAdd
	}
	return false
}

func (x *AlterGroupMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *AlterGroupMemberRequest) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

type AlterGroupMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AlterGroupMemberResponse) Reset() {
	*x = AlterGroupMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterGroupMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterGroupMemberResponse) ProtoMessage() {}

func (x *AlterGroupMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterGroupMemberResponse.ProtoReflect.Descriptor instead.
func (*AlterGroupMemberResponse) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{3}
}

func (x *AlterGroupMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AlterGroupMemberResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 订阅群组, 由im-relay调用, 某个人订阅群组, im-relay先确认是否存在这个群(请求im-relation), 然后一致性hash
type SubscribeGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             int64  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GroupId             int64  `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GwAdvertiseAddrPort string `protobuf:"bytes,3,opt,name=gw_advertise_addr_port,json=gwAdvertiseAddrPort,proto3" json:"gw_advertise_addr_port,omitempty"`
	SessionId           string `protobuf:"bytes,4,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *SubscribeGroupRequest) Reset() {
	*x = SubscribeGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeGroupRequest) ProtoMessage() {}

func (x *SubscribeGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeGroupRequest.ProtoReflect.Descriptor instead.
func (*SubscribeGroupRequest) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeGroupRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SubscribeGroupRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SubscribeGroupRequest) GetGwAdvertiseAddrPort() string {
	if x != nil {
		return x.GwAdvertiseAddrPort
	}
	return ""
}

func (x *SubscribeGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SubscribeGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       SubscribeGroupResponse_SubscribeGroupCode `protobuf:"varint,1,opt,name=code,proto3,enum=imchatevloop.SubscribeGroupResponse_SubscribeGroupCode" json:"code,omitempty"`
	Version    int64                                     `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	RelationId int64                                     `protobuf:"varint,3,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
	MaxSeqId   int64                                     `protobuf:"varint,4,opt,name=max_seq_id,json=maxSeqId,proto3" json:"max_seq_id,omitempty"`
}

func (x *SubscribeGroupResponse) Reset() {
	*x = SubscribeGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeGroupResponse) ProtoMessage() {}

func (x *SubscribeGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeGroupResponse.ProtoReflect.Descriptor instead.
func (*SubscribeGroupResponse) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeGroupResponse) GetCode() SubscribeGroupResponse_SubscribeGroupCode {
	if x != nil {
		return x.Code
	}
	return SubscribeGroupResponse_OK
}

func (x *SubscribeGroupResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SubscribeGroupResponse) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *SubscribeGroupResponse) GetMaxSeqId() int64 {
	if x != nil {
		return x.MaxSeqId
	}
	return 0
}

// 发送消息
type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         int64  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GroupId         int64  `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MessageData     []byte `protobuf:"bytes,3,opt,name=message_data,json=messageData,proto3" json:"message_data,omitempty"`
	CheckIdempotent bool   `protobuf:"varint,4,opt,name=check_idempotent,json=checkIdempotent,proto3" json:"check_idempotent,omitempty"` // 是否需要检查幂等
	IdempotentKey   string `protobuf:"bytes,5,opt,name=idempotent_key,json=idempotentKey,proto3" json:"idempotent_key,omitempty"`        // 幂等key
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{6}
}

func (x *SendMessageRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SendMessageRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SendMessageRequest) GetMessageData() []byte {
	if x != nil {
		return x.MessageData
	}
	return nil
}

func (x *SendMessageRequest) GetCheckIdempotent() bool {
	if x != nil {
		return x.CheckIdempotent
	}
	return false
}

func (x *SendMessageRequest) GetIdempotentKey() string {
	if x != nil {
		return x.IdempotentKey
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       SendMessageResponse_SendMessageCode `protobuf:"varint,1,opt,name=code,proto3,enum=imchatevloop.SendMessageResponse_SendMessageCode" json:"code,omitempty"`
	Version    int64                               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	RelationId int64                               `protobuf:"varint,3,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
	MaxSeqId   int64                               `protobuf:"varint,4,opt,name=max_seq_id,json=maxSeqId,proto3" json:"max_seq_id,omitempty"`
	MessageSeq int64                               `protobuf:"varint,5,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageResponse) GetCode() SendMessageResponse_SendMessageCode {
	if x != nil {
		return x.Code
	}
	return SendMessageResponse_OK
}

func (x *SendMessageResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SendMessageResponse) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *SendMessageResponse) GetMaxSeqId() int64 {
	if x != nil {
		return x.MaxSeqId
	}
	return 0
}

func (x *SendMessageResponse) GetMessageSeq() int64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

// 解散群
type DisbandGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GroupId int64 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *DisbandGroupRequest) Reset() {
	*x = DisbandGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandGroupRequest) ProtoMessage() {}

func (x *DisbandGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandGroupRequest.ProtoReflect.Descriptor instead.
func (*DisbandGroupRequest) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{8}
}

func (x *DisbandGroupRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DisbandGroupRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type DisbandGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DisbandGroupResponse) Reset() {
	*x = DisbandGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_im_chat_evloop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandGroupResponse) ProtoMessage() {}

func (x *DisbandGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_im_chat_evloop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandGroupResponse.ProtoReflect.Descriptor instead.
func (*DisbandGroupResponse) Descriptor() ([]byte, []int) {
	return file_service_im_chat_evloop_proto_rawDescGZIP(), []int{9}
}

func (x *DisbandGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DisbandGroupResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_service_im_chat_evloop_proto protoreflect.FileDescriptor

var file_service_im_chat_evloop_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6d, 0x2d, 0x63, 0x68, 0x61,
	0x74, 0x2d, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x1a, 0x0f, 0x62, 0x61,
	0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f,
	0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x64, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e,
	0x0a, 0x18, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9e,
	0x01, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16,
	0x67, 0x77, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x77,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x95, 0x02, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61,
	0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x49, 0x64,
	0x22, 0x55, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x4c, 0x44, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x42,
	0x41, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x03, 0x22, 0xbd, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f,
	0x74, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xaa, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71,
	0x22, 0x52, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x56,
	0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x42, 0x41, 0x4e, 0x44,
	0x45, 0x44, 0x10, 0x03, 0x22, 0x49, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xcd, 0x03, 0x0a, 0x0c,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x12, 0x52, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x69, 0x6d,
	0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x10, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6d,
	0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76,
	0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x63,
	0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74,
	0x65, 0x76, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x70,
	0x69, 0x67, 0x65, 0x6f, 0x6e, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x65, 0x76,
	0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_im_chat_evloop_proto_rawDescOnce sync.Once
	file_service_im_chat_evloop_proto_rawDescData = file_service_im_chat_evloop_proto_rawDesc
)

func file_service_im_chat_evloop_proto_rawDescGZIP() []byte {
	file_service_im_chat_evloop_proto_rawDescOnce.Do(func() {
		file_service_im_chat_evloop_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_im_chat_evloop_proto_rawDescData)
	})
	return file_service_im_chat_evloop_proto_rawDescData
}

var file_service_im_chat_evloop_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_im_chat_evloop_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_im_chat_evloop_proto_goTypes = []interface{}{
	(SubscribeGroupResponse_SubscribeGroupCode)(0), // 0: imchatevloop.SubscribeGroupResponse.SubscribeGroupCode
	(SendMessageResponse_SendMessageCode)(0),       // 1: imchatevloop.SendMessageResponse.SendMessageCode
	(*CreateGroupRequest)(nil),                     // 2: imchatevloop.CreateGroupRequest
	(*CreateGroupResponse)(nil),                    // 3: imchatevloop.CreateGroupResponse
	(*AlterGroupMemberRequest)(nil),                // 4: imchatevloop.AlterGroupMemberRequest
	(*AlterGroupMemberResponse)(nil),               // 5: imchatevloop.AlterGroupMemberResponse
	(*SubscribeGroupRequest)(nil),                  // 6: imchatevloop.SubscribeGroupRequest
	(*SubscribeGroupResponse)(nil),                 // 7: imchatevloop.SubscribeGroupResponse
	(*SendMessageRequest)(nil),                     // 8: imchatevloop.SendMessageRequest
	(*SendMessageResponse)(nil),                    // 9: imchatevloop.SendMessageResponse
	(*DisbandGroupRequest)(nil),                    // 10: imchatevloop.DisbandGroupRequest
	(*DisbandGroupResponse)(nil),                   // 11: imchatevloop.DisbandGroupResponse
}
var file_service_im_chat_evloop_proto_depIdxs = []int32{
	0,  // 0: imchatevloop.SubscribeGroupResponse.code:type_name -> imchatevloop.SubscribeGroupResponse.SubscribeGroupCode
	1,  // 1: imchatevloop.SendMessageResponse.code:type_name -> imchatevloop.SendMessageResponse.SendMessageCode
	2,  // 2: imchatevloop.IMChatEvloop.CreateGroup:input_type -> imchatevloop.CreateGroupRequest
	4,  // 3: imchatevloop.IMChatEvloop.AlterGroupMember:input_type -> imchatevloop.AlterGroupMemberRequest
	6,  // 4: imchatevloop.IMChatEvloop.SubscribeGroup:input_type -> imchatevloop.SubscribeGroupRequest
	8,  // 5: imchatevloop.IMChatEvloop.SendMessage:input_type -> imchatevloop.SendMessageRequest
	10, // 6: imchatevloop.IMChatEvloop.DisbandGroup:input_type -> imchatevloop.DisbandGroupRequest
	3,  // 7: imchatevloop.IMChatEvloop.CreateGroup:output_type -> imchatevloop.CreateGroupResponse
	5,  // 8: imchatevloop.IMChatEvloop.AlterGroupMember:output_type -> imchatevloop.AlterGroupMemberResponse
	7,  // 9: imchatevloop.IMChatEvloop.SubscribeGroup:output_type -> imchatevloop.SubscribeGroupResponse
	9,  // 10: imchatevloop.IMChatEvloop.SendMessage:output_type -> imchatevloop.SendMessageResponse
	11, // 11: imchatevloop.IMChatEvloop.DisbandGroup:output_type -> imchatevloop.DisbandGroupResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_service_im_chat_evloop_proto_init() }
func file_service_im_chat_evloop_proto_init() {
	if File_service_im_chat_evloop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_im_chat_evloop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterGroupMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_im_chat_evloop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_im_chat_evloop_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_im_chat_evloop_proto_goTypes,
		DependencyIndexes: file_service_im_chat_evloop_proto_depIdxs,
		EnumInfos:         file_service_im_chat_evloop_proto_enumTypes,
		MessageInfos:      file_service_im_chat_evloop_proto_msgTypes,
	}.Build()
	File_service_im_chat_evloop_proto = out.File
	file_service_im_chat_evloop_proto_rawDesc = nil
	file_service_im_chat_evloop_proto_goTypes = nil
	file_service_im_chat_evloop_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.11.3. DO NOT EDIT.

type IMChatEvloop interface {
	CreateGroup(ctx context.Context, req *CreateGroupRequest) (res *CreateGroupResponse, err error)
	AlterGroupMember(ctx context.Context, req *AlterGroupMemberRequest) (res *AlterGroupMemberResponse, err error)
	SubscribeGroup(ctx context.Context, req *SubscribeGroupRequest) (res *SubscribeGroupResponse, err error)
	SendMessage(ctx context.Context, req *SendMessageRequest) (res *SendMessageResponse, err error)
	DisbandGroup(ctx context.Context, req *DisbandGroupRequest) (res *DisbandGroupResponse, err error)
}
