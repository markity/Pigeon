syntax = "proto3";

package imrelay;
option go_package = "service/imrelay";

import "base/base.proto";

message BizMessageReq {
  base.SessionEntry session = 1;
  string biz = 2;
  string echo_code = 3;
  bytes data = 4;
}

message BizMessageResp {};

message CreateChatEventLoopReq {
  int64 config_version = 1;
  string group_id = 2;
};

// 当config version对不上自己的配置的时候, 需要让im-relay自己更新config, 然后重新发起rpc
message CreateChatEventLoopResp {
  bool success = 1;
  int64 config_version = 2;
};

message RedirectToChatEventLoopReq {
  int64 config_version = 1;
  string group_id = 2;
  bytes input = 3;
};

message RedirectToChatEventLoopResp {
  bool success = 1;
  int64 config_version = 2;
  bytes output = 3;
};

service IMRelay {
  rpc BizMessage(BizMessageReq) returns (BizMessageResp);

  // 一致性hash定位event loop server, 创建event loop
  rpc CreateChatEventLoop(CreateChatEventLoopReq) returns(CreateChatEventLoopResp);
  // 将消息重定向到event loop中, 并且获得响应
  rpc RedirectToChatEventLoop(RedirectToChatEventLoopReq) returns (RedirectToChatEventLoopResp);
}
