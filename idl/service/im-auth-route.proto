syntax = "proto3";


package imauthroute;
option go_package = "service/imauthroute";

message SessionEntry {
    int64 LoginAt = 1;
    string username = 2;
    string session_id = 3;
    string device_desc = 4;
    string gwAdvertiseAddrPort = 5;
};

message LoginReq {
  string username = 1;
  string password = 2;
  // 多设备管理, 用来描述设备信息的字符串, 业务方自行上传
  string device_desc =3;
}

message LoginResp {
  bool success = 1;
  // 仅当success==true时才有意义
  string session_id = 2;
  // 用来做多设备管理的, 通过version避免乱序
  int64 version = 3;
  // 会包括自身
  repeated SessionEntry sessions = 4;
}

message LogoutReq {
  string session_id = 1;
}

message LogoutResp {
  // 如果不存在这个登录项, 那么就false
  bool success = 1;
}

// 踢人请求
message ForceOfflineReq {
  string self_session_id = 1;
  string remote_session_id = 2;
}

message ForceOfflineResp {
  // 是否成功踢出
  bool success = 1;
  // 踢出ok后会返回当前此用户的在线全量
  int64 version = 2;
  // 会包括自身
  repeated SessionEntry sessions = 3;
}

message QuerySessionRouteReq {
  string session_id = 1;
};

message QuerySessionRouteResp {
  bool success = 1;
  // success == true时后面的数据才有效
  SessionEntry route = 2;
};

message QueryUserRouteReq {
  string username = 1;
};

message QueryUserRouteResp {
  bool success = 1;
  repeated SessionEntry routes = 2;
};

service IMAuthRoute {
  // 供gateway调用, 进行登录操作
  rpc Login(LoginReq) returns (LoginResp);
  // 供gateway调用, 进行登出操作
  rpc Logout(LogoutReq) returns (LogoutResp);
  // 供gateway调用, 下线其它设备
  rpc ForceOffline(ForceOfflineReq) returns (ForceOfflineResp);

  // 供内部服务器使用, 查询route
  rpc QuerySessionRoute(QuerySessionRouteReq) returns (QuerySessionRouteResp);
  rpc QueryUserRoute(QueryUserRouteReq) returns (QueryUserRouteResp);
}